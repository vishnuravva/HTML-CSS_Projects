@import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins',sans-serif;
    font-size: 18px;
}
body{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}
.header{
    height:80px;
    width: 70%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: goldenrod;
    margin: 30px 0px;
    padding: 15px;
    border-radius: 3px;
}
.header .logo{
    font-size: 30px;
    font-weight: bold ;
    color:white;
}
.cart{
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: white;
    padding: 7px 10px;
    border-radius: 3px;
    width: 80px;
}
.fa-solid{
    color: goldenrod;
}
.cart p{
    height:22px;
    width: 22px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 22px;
    background-color: goldenrod;
    color:white;
}


    /* width:60%; */
   /* display: grid; */ /* Use display: grid; to make a block-level grid container: */
   /* grid-template-columns: repeat(2,1fr); */ /*used to define the columns of a CSS grid. 
    repeat(2,1fr) is used to define the width of the columns. The repeat function takes two arguments: 
    the first argument specifies how many times the column pattern should be repeated, and the second argument specifies the width of each column.
    In this case, the first argument is 2, which means that the pattern will be repeated twice. 
    The second argument is 1fr, which specifies that each column should take up an equal fraction of the available space in the grid container.*/
   /* grid-gap: 20px; */ /* is a CSS property that is used to define the space between rows and columns in a CSS grid. 
    It is a shorthand property for grid-row-gap and grid-column-gap.*/


.container{
    display: flex;
    width:70%;
    margin-bottom: 30px;
    /* position: relative;*/ /* set parent container as the relative position context */
}
#root{
/* grid-template-columns is a property in CSS that is used to define the columns of a CSS grid.
    In this case, repeat(2,1fr) is used to define the width of the columns. The repeat function takes two arguments: 
        the first argument specifies how many times the column pattern should be repeated, 
        the second argument specifies the width of each column.
    In this case, the first argument is 2, which means that the pattern will be repeated twice. 
    The second argument is 1fr, which specifies that each column should take up an equal fraction of the available space in the grid container.
    So, this property will create a grid with two columns of equal width, each taking up 50% of the available space in the grid container.*/
    display: grid;
    grid-template-columns: repeat(2,1fr);
    grid-gap: 20px;
}
.sidebar{
    
    width: 40%;
    border-radius: 5px;
    background-color: #eee;
    padding: 15px;
    margin-left: 20px;
    text-align: center;
   /* position:absolute; *//* position the child element absolutely */
    /* right:0; *//* position it all the way to the right of the parent container */


}
.head{
    background-color: goldenrod;
    border-radius: 3px;
    height: 40px;
    padding: 10px;
    margin-bottom: 20px;
    color:white;
    display: flex;
    align-items: center;
}
.foot{
    display: flex;
    justify-content: space-between;
    margin: 20px 0px;
    padding: 10px 0px;
    border-top: 1px solid #333;

}
.box{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    border: 1px solid goldenrod;
    border-radius: 5px;
    padding: 5px;
}
.img-box{
    
    width: 100%;
    height:180px;
    display: flex;
    align-items: center;
    justify-content: center;  
}
.images{
    max-width: 90%;
    max-height: 90%;
    object-fit: cover;
    object-position: center;
    
}
.bottom{
    margin-top:20px;
    width: 100%;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    height:110px;
}
h2{
    font-size: 20px;
    color: red;
}
button{
    width:100%;
    position: relative;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    background-color: goldenrod;
    padding: 7px 25px;
    color:white;
}
button:hover{
    background-color: #333;
}
.cart-item{
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px;
    background-color: white;
    border-bottom: 1px solid #aaa;
    border-radius:3px;
    margin: 10px 10px;
}
.row-img{
    width:50px;
    height:50px;
    border-radius: 50px;
    border:1px solid goldenrod;
    display: flex;
    align-items: center;
    justify-content: center;

}
.rowimg{
    max-width: 43px;
    max-height: 43px;
    border-radius: 50%;
}
.fa-trash:hover{
    cursor: pointer;
    color: #333;
}